/*
 * This file was generated by qdbusxml2cpp version 0.7
 * Command line was: qdbusxml2cpp -c DbusAdaptorServer -a dbusServer.h:dbusServer.cpp eu.renaudguezennec.xml
 *
 * qdbusxml2cpp is Copyright (C) 2011 Nokia Corporation and/or its subsidiary(-ies).
 *
 * This is an auto-generated file.
 * This file may have been hand-edited. Look for HAND-EDIT comments
 * before re-generating it.
 */

#ifndef DBUSSERVER_H_1357939822
#define DBUSSERVER_H_1357939822

#include <QtCore/QObject>
#include <QtDBus/QtDBus>
class QByteArray;
template<class T> class QList;
template<class Key, class Value> class QMap;
class QString;
class QStringList;
class QVariant;

/*
 * Adaptor class for interface local.Player
 */
class DbusAdaptorServer: public QDBusAbstractAdaptor
{
    Q_OBJECT
    Q_CLASSINFO("D-Bus Interface", "local.Player")
    Q_CLASSINFO("D-Bus Introspection", ""
"  <interface name=\"local.Player\">\n"
"    <signal name=\"SetId\">\n"
"      <arg direction=\"out\" type=\"i\" name=\"i\"/>\n"
"    </signal>\n"
"    <signal name=\"playingStop\"/>\n"
"    <method name=\"nextSong\"/>\n"
"    <method name=\"playSong\"/>\n"
"    <method name=\"previousSong\"/>\n"
"    <method name=\"pauseSong\"/>\n"
"    <method name=\"stopSong\"/>\n"
"    <method name=\"setSelectionMode\">\n"
"      <arg direction=\"in\" type=\"i\" name=\"mode\"/>\n"
"    </method>\n"
"    <method name=\"increaseSong\">\n"
"      <arg direction=\"in\" type=\"i\" name=\"i\"/>\n"
"    </method>\n"
"    <method name=\"increaseSong\"/>\n"
"    <method name=\"decreaseSong\">\n"
"      <arg direction=\"in\" type=\"i\" name=\"i\"/>\n"
"    </method>\n"
"    <method name=\"decreaseSong\"/>\n"
"    <method name=\"seek\">\n"
"      <arg direction=\"in\" type=\"s\"/>\n"
"    </method>\n"
"    <method name=\"setVolume\">\n"
"      <arg direction=\"in\" type=\"i\"/>\n"
"    </method>\n"
"  </interface>\n"
        "")
public:
    DbusAdaptorServer(QObject *parent);
    virtual ~DbusAdaptorServer();

public: // PROPERTIES
public Q_SLOTS: // METHODS
    void decreaseSong();
    void decreaseSong(int i);
    void increaseSong();
    void increaseSong(int i);
    void nextSong();
    void pauseSong();
    void playSong();
    void previousSong();
    void seek(const QString &in0);
    void setSelectionMode(int mode);
    void setVolume(int in0);
    void stopSong();
Q_SIGNALS: // SIGNALS
    void SetId(int i);
    void playingStop();
};

#endif
