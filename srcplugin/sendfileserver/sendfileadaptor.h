/*
 * This file was generated by qdbusxml2cpp version 0.7
 * Command line was: qdbusxml2cpp -c SendFileAdaptor -p sendfileadaptor.h:sendfileadaptor.cpp ../../resources/dbus/eu.playview.renaudguezennec.xml
 *
 * qdbusxml2cpp is Copyright (C) 2013 Digia Plc and/or its subsidiary(-ies).
 *
 * This is an auto-generated file.
 * Do not edit! All changes made to it will be lost.
 */

#ifndef SENDFILEADAPTOR_H_1418672131
#define SENDFILEADAPTOR_H_1418672131

#include <QtCore/QObject>
#include <QtCore/QByteArray>
#include <QtCore/QList>
#include <QtCore/QMap>
#include <QtCore/QString>
#include <QtCore/QStringList>
#include <QtCore/QVariant>
#include <QtDBus/QtDBus>

/*
 * Proxy class for interface local.qdbuscpp2xml.PL_TableView
 */
class SendFileAdaptor: public QDBusAbstractInterface
{
    Q_OBJECT
public:
    static inline const char *staticInterfaceName()
    { return "local.qdbuscpp2xml.PL_TableView"; }

public:
    SendFileAdaptor(const QString &service, const QString &path, const QDBusConnection &connection, QObject *parent = 0);

    ~SendFileAdaptor();

public Q_SLOTS: // METHODS
    inline QDBusPendingReply<> OnForceWriting()
    {
        QList<QVariant> argumentList;
        return asyncCallWithArgumentList(QLatin1String("OnForceWriting"), argumentList);
    }

    inline QDBusPendingReply<> OnRegex()
    {
        QList<QVariant> argumentList;
        return asyncCallWithArgumentList(QLatin1String("OnRegex"), argumentList);
    }

    inline QDBusPendingReply<> OnSort()
    {
        QList<QVariant> argumentList;
        return asyncCallWithArgumentList(QLatin1String("OnSort"), argumentList);
    }

    inline QDBusPendingReply<> OnUpdate()
    {
        QList<QVariant> argumentList;
        return asyncCallWithArgumentList(QLatin1String("OnUpdate"), argumentList);
    }

    inline QDBusPendingReply<> PopupMenurequested(const QPoint &pos)
    {
        QList<QVariant> argumentList;
        argumentList << QVariant::fromValue(pos);
        return asyncCallWithArgumentList(QLatin1String("PopupMenurequested"), argumentList);
    }

    inline QDBusPendingReply<> cancel()
    {
        QList<QVariant> argumentList;
        return asyncCallWithArgumentList(QLatin1String("cancel"), argumentList);
    }

    inline QDBusPendingReply<> copy()
    {
        QList<QVariant> argumentList;
        return asyncCallWithArgumentList(QLatin1String("copy"), argumentList);
    }

    inline QDBusPendingReply<> cut()
    {
        QList<QVariant> argumentList;
        return asyncCallWithArgumentList(QLatin1String("cut"), argumentList);
    }

    inline QDBusPendingReply<> onFileNameAsTitle()
    {
        QList<QVariant> argumentList;
        return asyncCallWithArgumentList(QLatin1String("onFileNameAsTitle"), argumentList);
    }

    inline QDBusPendingReply<> onForce()
    {
        QList<QVariant> argumentList;
        return asyncCallWithArgumentList(QLatin1String("onForce"), argumentList);
    }

    inline QDBusPendingReply<> onModify()
    {
        QList<QVariant> argumentList;
        return asyncCallWithArgumentList(QLatin1String("onModify"), argumentList);
    }

    inline QDBusPendingReply<> onMoveSelection()
    {
        QList<QVariant> argumentList;
        return asyncCallWithArgumentList(QLatin1String("onMoveSelection"), argumentList);
    }

    inline QDBusPendingReply<> onRemove()
    {
        QList<QVariant> argumentList;
        return asyncCallWithArgumentList(QLatin1String("onRemove"), argumentList);
    }

    inline QDBusPendingReply<> onSelect(int p)
    {
        QList<QVariant> argumentList;
        argumentList << QVariant::fromValue(p);
        return asyncCallWithArgumentList(QLatin1String("onSelect"), argumentList);
    }

    inline QDBusPendingReply<> onremoveFile()
    {
        QList<QVariant> argumentList;
        return asyncCallWithArgumentList(QLatin1String("onremoveFile"), argumentList);
    }

    inline QDBusPendingReply<> paste()
    {
        QList<QVariant> argumentList;
        return asyncCallWithArgumentList(QLatin1String("paste"), argumentList);
    }

    inline QDBusPendingReply<> sendFile()
    {
        QList<QVariant> argumentList;
        return asyncCallWithArgumentList(QLatin1String("sendFile"), argumentList);
    }

    inline QDBusPendingReply<> sendSelectedFileToDevice()
    {
        QList<QVariant> argumentList;
        return asyncCallWithArgumentList(QLatin1String("sendSelectedFileToDevice"), argumentList);
    }

Q_SIGNALS: // SIGNALS
    void CommandStart();
    void Maximum(int M);
    void Minimum(int m);
    void actiondone(int a);
    void dataChanged();
    void dataModelChanged();
    void done();
    void isCopiable(bool a);
    void isCutable(bool a);
    void isPastable(bool a);
    void sendFileToPhone(const QString &uri);
    void valueChanged(int v);
};

namespace local {
  namespace qdbuscpp2xml {
    typedef ::SendFileAdaptor PL_TableView;
  }
}
#endif
